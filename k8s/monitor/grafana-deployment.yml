apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: monitoring-grafana
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        task: monitoring
        k8s-app: grafana
    spec:
      containers:
      - name: grafana
#        image: registry.bst-1.cns.bstjpc.com:5000/k8s.gcr.io/heapster-grafana-amd64:v4.4.3
        image: registry.bst-1.cns.bstjpc.com:5000/k8s.gcr.io/heapster-grafana-amd64-gpu:v4.4.3
        ports:
        - containerPort: 3000
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ca-certificates
          readOnly: true
        - mountPath: /var
          name: grafana-storage
        env:
        - name: INFLUXDB_HOST
          value: monitoring-influxdb.kube-system
        - name: GF_SERVER_HTTP_PORT
          value: "3000"
          # The following env variables are required to make Grafana accessible via
          # the kubernetes api-server proxy. On production clusters, we recommend
          # removing these env variables, setup auth for grafana, and expose the grafana
          # service using a LoadBalancer or a public IP.
        - name: GF_AUTH_BASIC_ENABLED
          value: "false"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: Admin
        - name: GF_SERVER_ROOT_URL
          value: /
          # If you're only using the API Server proxy, set this value instead:
#          value: /api/v1/namespaces/kube-system/services/monitoring-grafana/proxy
      volumes:
      - name: ca-certificates
        hostPath:
          path: /etc/ssl/certs
      - name: grafana-storage
        emptyDir: {}
#      nodeSelector:
#        type: triton
#        kubernetes.io/hostname: ogs-gpu02
#        kubernetes.io/hostname: 7dd70763-c067-6232-a90b-d6c1a9eef026

