# Define which registries and repositories you want available in your
# Spinnaker pipeline definitions
# For more info visit:
#   https://www.spinnaker.io/setup/providers/docker-registry/

# Configure your Docker registries here
accounts:
- name: dockerhub
  address: https://registry.bst-1.cns.bstjpc.com:5000
  insecureRegistry: true
  repositories:
    - library/ubuntu
# - name: gcr
#   address: https://gcr.io
#   username: _json_key
#   password: '<INSERT YOUR SERVICE ACCOUNT JSON HERE>'
#   email: 1234@5678.com

# Settings for notifications via email
# For more info visit:
#   https://www.spinnaker.io/setup/features/notifications/#email
mail:
  enabled: false
  host: smtp.example.org
  username: admin
  password: admin
  fromAddress: spinnaker@example.org
  port: 25

slack:
  enabled: false
  token:
  botName: 'spinnakerbot'

# Images for each component
images:
  clouddriver: registry.bst-1.cns.bstjpc.com:5000/gcr.io/spinnaker-marketplace/clouddriver:2.0.0-20180526    #2.0.0-20180221152902
  echo: registry.bst-1.cns.bstjpc.com:5000/gcr.io/spinnaker-marketplace/echo:0.8.0-20180221133510
  deck: registry.bst-1.cns.bstjpc.com:5000/gcr.io/spinnaker-marketplace/deck:2.1.0-20180221143146
  igor: registry.bst-1.cns.bstjpc.com:5000/gcr.io/spinnaker-marketplace/igor:0.9.0-20180221133510
  orca: registry.bst-1.cns.bstjpc.com:5000/gcr.io/spinnaker-marketplace/orca:0.10.0-20180221133510
  gate: registry.bst-1.cns.bstjpc.com:5000/gcr.io/spinnaker-marketplace/gate:0.10.0-20180221133510
  front50: registry.bst-1.cns.bstjpc.com:5000/gcr.io/spinnaker-marketplace/front50:0.9.0-20180221133510
  rosco: registry.bst-1.cns.bstjpc.com:5000/gcr.io/spinnaker-marketplace/rosco:0.5.0-20180221133510

# Change this if youd like to expose Spinnaker outside the cluster
deck:
  host: localhost
  port: 9000
  protocol: http
  ingress:
    enabled: false
    # annotations:
      # ingress.kubernetes.io/ssl-redirect: 'true'
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # tls:
    #  - secretName: -tls
    #    hosts:
    #      - domain.com

gate:
  allowedOriginsPattern: '^https?://(?:localhost|127.0.0.1|[^/]+\.example\.com)(?::[1-9]\d*)?/?$'

# Bucket to use when storing config data in S3 compatible storage
storageBucket: spinnaker

# Change service type for UI service
serviceType: ClusterIP

# Resources to provide to each of
# the Spinnaker components
resources:
  limits:
    cpu: 700m
    memory: 880Mi
  requests:
    cpu: 500m
    memory: 640Mi

# Node labels for pod assignment
# Ref: https://kubernetes.io/docs/user-guide/node-selection/
# nodeSelector to provide to each of the Spinnaker components
nodeSelector:
  role: master

# Redis password to use for the in-cluster redis service
# Redis is not exposed publically
redis:
  redisPassword: cloudpi
  nodeSelector:
  role: master
  persistence:
    enabled: true
    storageClass: cephfs-flex-volume
    accessMode: ReadWriteOnce
    size: 10Gi

# Minio access/secret keys for the in-cluster S3 usage
# Minio is not exposed publically
minio:
  enabled: true
  imageTag: RELEASE.2018-03-16T22-52-12Z
  serviceType: ClusterIP
  accessKey: "AKIAIOSFODNN7EXAMPLE"
  secretKey: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
  nodeSelector:
      role: master
  persistence:
    enabled: true
    storageClass: cephfs-flex-volume
    accessMode: ReadWriteOnce
    size: 10Gi

gcs:
  enabled: false
  project: my-project-name
  jsonKey: '<INSERT CLOUD STORAGE JSON HERE>'

# Configuration for the Jenkins instance that is attached to the
# igor component of Spinnaker. For more info about the Jenkins integration
# with Spinnaker, visit:
#   https://www.spinnaker.io/setup/ci/jenkins/
jenkins:
  enabled: true
  Master:
    Cpu: "500m"
    Memory: "512Mi"
    ServiceType: ClusterIP
    CustomConfigMap: true
    NodeSelector: {}
#      type: triton

  Agent:
    Cpu: "500m"
    Memory: "512Mi"
    NodeSelector:
      role: master

  Persistence:
    Enabled: false
    StorageClass: cephfs-flex-volume
    AccessMode: ReadWriteOnce
    Size: 8Gi
