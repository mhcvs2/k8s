apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "commit-job.fullname" . }}
  labels:
    app: {{ template "commit-job.name" . }}
    chart: {{ template "commit-job.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  namespace: {{ lower .Values.labName | splitList " " | join "-" }}
spec:
  backoffLimit: 3
  activeDeadlineSeconds: {{ .Values.timeout }}
  template:
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: release
                operator: In
                values:
                - {{ .Values.targetReleaseName }}
            topologyKey: kubernetes.io/hostname
      volumes:
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
#      - name: share
#        emptyDir: {}
      serviceAccountName: {{ lower .Values.labName | splitList " " | join "-" }}-admin
      containers:
      - name: commit-push
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock
#        - name: share
#          mountPath: /share
        env:
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SELECT_LABEL
          value: release={{ .Values.targetReleaseName }}
        - name: IMAGE_NAME
          value:  "{{ .Values.imageName }}"
{{- if .Values.imageTag }}
        - name: IMAGE_TAG
          value: "{{ .Values.imageTag }}"
{{- end }}
{{- if .Values.author }}
        - name: AUTHOR
          value: "{{ .Values.author }}"
{{- end }}
{{- if .Values.message }}
        - name: MESSAGE
          value: "{{ .Values.message }}"
{{- end }}
      restartPolicy: Never
#      initContainers:
#      - name: get-container-id
#        image: {{ .Values.image.init }}
#        imagePullPolicy: {{ .Values.image.pullPolicy }}
#        command:
#        - bash
#        - -c
#        - "get-container-id -n ${MY_NAMESPACE} -l ${SELECT_LABEL} > /share/container_id"
#        env:
#        - name: MY_NAMESPACE
#          valueFrom:
#            fieldRef:
#              fieldPath: metadata.namespace
#        - name: SELECT_LABEL
#          value: release={{ .Values.targetReleaseName }}
#        resources:
#          limits:
#            cpu: 50m
#            memory: 100Mi
#        volumeMounts:
#        - name: share
#          mountPath: /share
